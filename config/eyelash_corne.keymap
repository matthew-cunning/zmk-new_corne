#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R      &kp T                         &kp UP                &kp Y  &kp U      &kp I         &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F      &kp G               &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &kp J      &kp K         &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V      &kp B  &kp SPACE              &kp DOWN              &kp N  &kp M      &kp COMMA     &kp DOT  &kp FSLH  &kp LEFT_CONTROL
                              &kp LGUI  &kp SPACE  &mo 2                                               &mo 1  &kp ENTER  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp LEFT_ALT  &kp N1   &kp N2           &kp N3        &kp N4         &kp N5                                     &mmv MOVE_UP                     &kp N6    &kp N7    &kp N8        &kp N9     &kp N0   &kp DELETE
&kp LSHFT     &kp F11  &kp LS(LC(TAB))  &kp PAGE_UP   &kp PAGE_DOWN  &kp LC(TAB)                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN  &kp UP        &kp RIGHT  &kp F12  &kp RSHFT
&kp LCTRL     &kp F1   &kp F2           &kp F3        &kp F4         &kp F5       &kp C_MUTE                    &mmv MOVE_DOWN                   &kp F6    &kp F7    &kp F8        &kp F9     &kp F10  &kp LEFT_CONTROL
                                        &kp LEFT_GUI  &kp TAB        &trans                                                                      &trans    &trans    &kp LEFT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp LEFT_ALT    &kp EXCL   &kp AT         &kp HASH          &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp STAR           &kp BACKSLASH
&kp LEFT_SHIFT  &kp GRAVE  &kp LESS_THAN  &kp GREATER_THAN  &kp SEMI   &kp SLASH            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE   &kp PIPE
&kp LCTRL       &kp TILDE  &trans         &none             &kp COLON  &kp QMARK  &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOUBLE_QUOTES  &kp GRAVE
                                          &trans            &trans     &trans                                                                &trans     &kp BACKSPACE  &kp ESC
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        combo_layer {
            display-name = "SPECIAL";
            bindings = <
&out OUT_USB     &out OUT_BLE    &trans        &bootloader   &sys_reset    &studio_unlock                                &mmv MOVE_UP                     &mkp MB4        &mkp LCLK       &mkp MB2      &mkp MB5         &trans      &kp K_PLAY_PAUSE
&bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp K_PREV  &kp K_NEXT
&rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &trans        &trans          &kp C_MUTE                    &mmv MOVE_DOWN                   &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans      &trans
                                               &trans        &trans        &trans                                                                         &trans          &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Special {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
